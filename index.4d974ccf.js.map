{"mappings":"CCAC,AAAA,SAAU,CAAC,EACV,EAAE,SAAW,SAAU,CAAM,EAC3B,IAAI,EAAQ,EAAE,uBAEC,MAAA,IAAX,GAAwB,EAAO,QACjC,CAAA,EAAQ,EAAM,OAAO,EADvB,EAIA,EAAM,KAAK,WACT,IAAI,EAAY,EAAE,IAAI,EAAE,OACtB,EAAY,EAAE,SAAS,cAAc,QAClC,SAAS,eACT,KAAK,eAAgB,EAAU,GAAG,aAEvC,aAAe,SAAU,CAAC,EACF,KAAA,IAAlB,EAAE,OAAO,MACX,EAAU,QAAQ,EAAE,MAEtB,SAAS,KAAK,UAAU,OAAO,cAC/B,EAAU,KAAK,eAAgB,EAAU,GAAG,YAC9C,EAEA,EAAU,GAAG,QAAS,cAEtB,EAAU,aAAa,EACzB,EACF,CACF,EAAG,QAiDF,AAAA,WACC,IAAM,EAAa,SAAS,KAAK,QAAQ,WACnC,EAAe,SAAS,iBAAiB,mBACzC,EAAmB,SAAS,iBAAiB,uBAEnD,GAAI,AAAe,SAAf,EAAuB,CACzB,IAAK,IAAM,KAAQ,EACjB,EAAK,UAAU,OAAO,UAExB,IAAK,IAAM,KAAQ,EACjB,EAAK,UAAU,IAAI,SAEvB,KAAO,CACL,IAAK,IAAM,KAAQ,EACjB,EAAK,UAAU,OAAO,UAExB,IAAK,IAAM,KAAQ,EACjB,EAAK,UAAU,IAAI,SAEvB,CACF,IAOA,MAAM,EAAa,SAAS,cAAc,qBAe1C,SAAS,EAAS,CAAS,EACzB,aAAa,QAAQ,QAAS,EAGhC,CAlBA,EAAW,iBAAiB,QAE5B,WACE,IAAM,EAAiB,EAAW,QAClC,GAAI,AAAmB,CAAA,IAAnB,EAAyB,CAE3B,EADY,cAEZ,MACF,CACA,aAAa,WAbU,SAevB,EADY,cAEd,GASM,AAAkC,eAAlC,aAAa,QAAQ,UACvB,EAAS,cACT,EAAW,QAAU,CAAA,EACrB,SAAS,KAAK,UAAU,IAAI,gBAG5B,EAAS,eACT,EAAW,QAAU,CAAA,EACrB,SAAS,KAAK,UAAU,OAAO","sources":["<anon>","src/js/header.js"],"sourcesContent":["(function($) {\n    $.switcher = function(filter) {\n        var $haul = $(\"input[type=checkbox]\");\n        if (filter !== undefined && filter.length) $haul = $haul.filter(filter);\n        $haul.each(function() {\n            var $checkbox = $(this).hide(), $switcher = $(document.createElement(\"div\")).addClass(\"ui-switcher\").attr(\"aria-checked\", $checkbox.is(\":checked\"));\n            toggleSwitch = function(e) {\n                if (e.target.type === undefined) $checkbox.trigger(e.type);\n                document.body.classList.toggle(\"theme-dark\");\n                $switcher.attr(\"aria-checked\", $checkbox.is(\":checked\"));\n            };\n            $switcher.on(\"click\", toggleSwitch);\n            $switcher.insertBefore($checkbox);\n        });\n    };\n})(jQuery);\n// document.body.classList.toggle('theme-light');\n// let changeThemeButtons = document.querySelectorAll('.switch'); // Помещаем кнопки смены темы в переменную\n// changeThemeButtons.forEach(button => {\n//     button.addEventListener('click', function () { // К каждой добавляем обработчик событий на клик\n//         let theme = this.dataset.theme; // Помещаем в переменную название темы из атрибута data-theme\n//         applyTheme(theme); // Вызываем функцию, которая меняет тему и передаем в нее её название\n//     });\n// });\n// function applyTheme(themeName) {\n//     document.querySelector('[title=\"theme\"]').setAttribute('href',`sass/theme-${themeName}.scss`); // Помещаем путь к файлу темы в пустой link в head\n//     changeThemeButtons.forEach(button => {\n//         button.style.display = 'block'; // Показываем все кнопки смены темы\n//     });\n//     // document.querySelector(`[data-theme=\"${themeName}\"]`).style.display = 'none'; // Но скрываем кнопку для активной темы\n// }\n//  // функція для встановлення певної теми/колірної схеми\n//  function setTheme(themeName) {\n//     localStorage.setItem('theme', themeName);\n//     document.documentElement.className = themeName;\n// }\n// // функція для перемикання між світлою та темною темами\n// function toggleTheme() {\n//     if (localStorage.getItem('theme') === 'theme-dark') {\n//         setTheme('theme-light');\n//     } else {\n//         setTheme('theme-dark');\n//     }\n// }\n// // Негайно викликана функція для встановлення теми під час початкового завантаження\n// (function () {\n//     if (localStorage.getItem('theme') === 'theme-dark') {\n//         setTheme('theme-dark');\n//         document.getElementById('slider').checked = false;\n//     } else {\n//         setTheme('theme-light');\n//       document.getElementById('slider').checked = true;\n//     }\n// })();\n// Підсвічування активної сторінки в меню\n(function setActiveMenuItem() {\n    const activePage = document.body.dataset.activePage;\n    const homeMenuItem = document.querySelectorAll(\"[data-home-btn]\");\n    const shoppingMenuItem = document.querySelectorAll(\"[data-shopping-btn]\");\n    if (activePage === \"home\") {\n        for (const item of shoppingMenuItem)item.classList.remove(\"active\");\n        for (const item of homeMenuItem)item.classList.add(\"active\");\n    } else {\n        for (const item of homeMenuItem)item.classList.remove(\"active\");\n        for (const item of shoppingMenuItem)item.classList.add(\"active\");\n    }\n})();\n// Зберігання та відображення темної/світлої теми\nconst localStorageName = \"theme\";\nlet themeName = \"theme-light\";\nconst checkboxEl = document.querySelector(\".form-check-input\");\ncheckboxEl.addEventListener(\"click\", onClickFun);\nfunction onClickFun() {\n    const checkboxStatus = checkboxEl.checked;\n    if (checkboxStatus === true) {\n        themeName = \"theme-dark\";\n        setTheme(themeName);\n        return;\n    }\n    localStorage.removeItem(localStorageName);\n    themeName = \"theme-light\";\n    setTheme(themeName);\n}\nfunction setTheme(themeName) {\n    localStorage.setItem(\"theme\", themeName);\n// console.log('hi im-', themeName); //-  этот консоль потом удали просто показываю что он работает\n// сюда нужно прописать куда применятся стили в themeName (основная отрисовка стилей)\n}\n(function() {\n    if (localStorage.getItem(\"theme\") === \"theme-dark\") {\n        setTheme(\"theme-dark\");\n        checkboxEl.checked = true;\n        document.body.classList.add(\"theme-dark\");\n        return;\n    } else {\n        setTheme(\"theme-light\");\n        checkboxEl.checked = false;\n        document.body.classList.remove(\"theme-dark\");\n    }\n})();\n\n//# sourceMappingURL=index.4d974ccf.js.map\n","(function ($) {\n  $.switcher = function (filter) {\n    var $haul = $('input[type=checkbox]');\n\n    if (filter !== undefined && filter.length) {\n      $haul = $haul.filter(filter);\n    }\n\n    $haul.each(function () {\n      var $checkbox = $(this).hide(),\n        $switcher = $(document.createElement('div'))\n          .addClass('ui-switcher')\n          .attr('aria-checked', $checkbox.is(':checked'));\n\n      toggleSwitch = function (e) {\n        if (e.target.type === undefined) {\n          $checkbox.trigger(e.type);\n        }\n        document.body.classList.toggle('theme-dark');\n        $switcher.attr('aria-checked', $checkbox.is(':checked'));\n      };\n\n      $switcher.on('click', toggleSwitch);\n\n      $switcher.insertBefore($checkbox);\n    });\n  };\n})(jQuery);\n\n// document.body.classList.toggle('theme-light');\n// let changeThemeButtons = document.querySelectorAll('.switch'); // Помещаем кнопки смены темы в переменную\n\n// changeThemeButtons.forEach(button => {\n//     button.addEventListener('click', function () { // К каждой добавляем обработчик событий на клик\n//         let theme = this.dataset.theme; // Помещаем в переменную название темы из атрибута data-theme\n//         applyTheme(theme); // Вызываем функцию, которая меняет тему и передаем в нее её название\n//     });\n// });\n\n// function applyTheme(themeName) {\n//     document.querySelector('[title=\"theme\"]').setAttribute('href',`sass/theme-${themeName}.scss`); // Помещаем путь к файлу темы в пустой link в head\n//     changeThemeButtons.forEach(button => {\n//         button.style.display = 'block'; // Показываем все кнопки смены темы\n//     });\n//     // document.querySelector(`[data-theme=\"${themeName}\"]`).style.display = 'none'; // Но скрываем кнопку для активной темы\n// }\n\n//  // функція для встановлення певної теми/колірної схеми\n//  function setTheme(themeName) {\n//     localStorage.setItem('theme', themeName);\n//     document.documentElement.className = themeName;\n// }\n\n// // функція для перемикання між світлою та темною темами\n// function toggleTheme() {\n//     if (localStorage.getItem('theme') === 'theme-dark') {\n//         setTheme('theme-light');\n//     } else {\n//         setTheme('theme-dark');\n//     }\n// }\n\n// // Негайно викликана функція для встановлення теми під час початкового завантаження\n// (function () {\n//     if (localStorage.getItem('theme') === 'theme-dark') {\n//         setTheme('theme-dark');\n//         document.getElementById('slider').checked = false;\n//     } else {\n//         setTheme('theme-light');\n//       document.getElementById('slider').checked = true;\n//     }\n// })();\n\n\n// Підсвічування активної сторінки в меню\n\n(function setActiveMenuItem() {\n  const activePage = document.body.dataset.activePage;\n  const homeMenuItem = document.querySelectorAll('[data-home-btn]');\n  const shoppingMenuItem = document.querySelectorAll('[data-shopping-btn]');\n\n  if (activePage === 'home') {\n    for (const item of shoppingMenuItem) { \n      item.classList.remove('active');\n    }\n    for (const item of homeMenuItem) { \n      item.classList.add('active');\n    }\n  } else {\n    for (const item of homeMenuItem) {\n      item.classList.remove('active');\n    }\n    for (const item of shoppingMenuItem) {\n      item.classList.add('active');\n    }\n  }\n})();\n\n// Зберігання та відображення темної/світлої теми\n\nconst localStorageName = 'theme';\nlet themeName = 'theme-light';\n\nconst checkboxEl = document.querySelector('.form-check-input');\ncheckboxEl.addEventListener('click', onClickFun);\n\nfunction onClickFun() {\n  const checkboxStatus = checkboxEl.checked;\n  if (checkboxStatus === true) {\n    themeName = 'theme-dark';\n    setTheme(themeName);\n    return;\n  }\n  localStorage.removeItem(localStorageName);\n  themeName = 'theme-light';\n  setTheme(themeName);\n}\n\nfunction setTheme(themeName) {\n  localStorage.setItem('theme', themeName);\n  // console.log('hi im-', themeName); //-  этот консоль потом удали просто показываю что он работает\n  // сюда нужно прописать куда применятся стили в themeName (основная отрисовка стилей)\n}\n\n(function () {\n  if (localStorage.getItem('theme') === 'theme-dark') {\n    setTheme('theme-dark');\n    checkboxEl.checked = true;\n    document.body.classList.add('theme-dark');\n    return;\n  } else {\n    setTheme('theme-light');\n    checkboxEl.checked = false;\n    document.body.classList.remove('theme-dark');\n  }\n})();\n"],"names":["$","switcher","filter","$haul","undefined","length","each","$checkbox","hide","$switcher","document","createElement","addClass","attr","is","toggleSwitch","e","target","type","trigger","body","classList","toggle","on","insertBefore","jQuery","activePage","dataset","homeMenuItem","querySelectorAll","shoppingMenuItem","item","remove","add","checkboxEl","querySelector","setTheme","themeName","localStorage","setItem","addEventListener","checkboxStatus","checked","removeItem","getItem"],"version":3,"file":"index.4d974ccf.js.map"}